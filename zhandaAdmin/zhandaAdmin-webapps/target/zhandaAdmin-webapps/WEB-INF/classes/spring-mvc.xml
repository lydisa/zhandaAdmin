<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
                    http://www.springframework.org/schema/context
                    http://www.springframework.org/schema/context/spring-context-3.0.xsd 
                    http://www.springframework.org/schema/mvc
                    http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
                    http://www.springframework.org/schema/aop
                    http://www.springframework.org/schema/aop/spring-aop-2.0.xsd"
       default-autowire="byName">


    <!-- 启动Spring MVC的注解功能，完成请求和注解POJO的映射,解决@ResponseBody乱码问题, 需要在annotation-driven和component-scan之前,否则乱码问题同样无法解决 -->
    <!--Spring3.1推荐使用RequestMappingHandlerAdapter -->
    <!--避免IE执行AJAX时，返回JSON出现下载文件 -->

    <bean id="mappingJacksonHttpMessageConverter"
          class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
        <property name="supportedMediaTypes">
            <list>
                <value>application/json;charset=utf-8</value>
            </list>
        </property>
    </bean>

    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
        <property name="messageConverters">
            <list>
                <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                    <property name="supportedMediaTypes">
                        <list>
                            <value>application/json;charset=utf-8</value>
                        </list>
                    </property>
                </bean>
                <ref bean="mappingJacksonHttpMessageConverter"/>
            </list>
        </property>
    </bean>

    <!-- 开启注解 -->
    <mvc:annotation-driven/>

    <!-- 注解扫描包 -->
    <context:component-scan base-package="com.zhandaAdmin.*">
        <!--<context:exclude-filter type="annotation" expression="org.springframework.stereotype."/>-->
    </context:component-scan>
    <aop:aspectj-autoproxy proxy-target-class="true"/>

    <!-- 静态资源(js/image)的访问 -->
    <mvc:resources location="/" mapping="/**"/>

    <!-- 定义视图解析器 -->
    <bean id="viewResolver"
          class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/jsp"></property>
        <property name="suffix" value=".jsp"></property>
    </bean>
    <!--<mvc:interceptors>-->
    <!--&lt;!&ndash; 使用bean定义一个Interceptor，直接定义在mvc:interceptors根下面的Interceptor将拦截所有的请求 &ndash;&gt;-->
    <!--<bean class="com.zhandaAdmin.controller.interceptor.myInterceptor"/>-->
    <!--<mvc:interceptor>-->
    <!--<mvc:mapping path="/test/number.do"/>-->
    <!--&lt;!&ndash; 定义在mvc:interceptor下面的表示是对特定的请求才进行拦截的 &ndash;&gt;-->
    <!--<bean class="com.zhandaAdmin.controller.interceptor.myInterceptor"/>-->
    <!--</mvc:interceptor>-->
    <!--</mvc:interceptors>-->
</beans>